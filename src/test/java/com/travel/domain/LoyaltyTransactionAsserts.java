package com.travel.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LoyaltyTransactionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyTransactionAllPropertiesEquals(LoyaltyTransaction expected, LoyaltyTransaction actual) {
        assertLoyaltyTransactionAutoGeneratedPropertiesEquals(expected, actual);
        assertLoyaltyTransactionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyTransactionAllUpdatablePropertiesEquals(LoyaltyTransaction expected, LoyaltyTransaction actual) {
        assertLoyaltyTransactionUpdatableFieldsEquals(expected, actual);
        assertLoyaltyTransactionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyTransactionAutoGeneratedPropertiesEquals(LoyaltyTransaction expected, LoyaltyTransaction actual) {
        assertThat(expected)
            .as("Verify LoyaltyTransaction auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyTransactionUpdatableFieldsEquals(LoyaltyTransaction expected, LoyaltyTransaction actual) {
        assertThat(expected)
            .as("Verify LoyaltyTransaction relevant properties")
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()))
            .satisfies(e -> assertThat(e.getPoints()).as("check points").isEqualTo(actual.getPoints()))
            .satisfies(e -> assertThat(e.getTransactionType()).as("check transactionType").isEqualTo(actual.getTransactionType()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyTransactionUpdatableRelationshipsEquals(LoyaltyTransaction expected, LoyaltyTransaction actual) {
        assertThat(expected)
            .as("Verify LoyaltyTransaction relationships")
            .satisfies(e -> assertThat(e.getCustomer()).as("check customer").isEqualTo(actual.getCustomer()));
    }
}

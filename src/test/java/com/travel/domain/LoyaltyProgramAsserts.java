package com.travel.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LoyaltyProgramAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyProgramAllPropertiesEquals(LoyaltyProgram expected, LoyaltyProgram actual) {
        assertLoyaltyProgramAutoGeneratedPropertiesEquals(expected, actual);
        assertLoyaltyProgramAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyProgramAllUpdatablePropertiesEquals(LoyaltyProgram expected, LoyaltyProgram actual) {
        assertLoyaltyProgramUpdatableFieldsEquals(expected, actual);
        assertLoyaltyProgramUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyProgramAutoGeneratedPropertiesEquals(LoyaltyProgram expected, LoyaltyProgram actual) {
        assertThat(expected)
            .as("Verify LoyaltyProgram auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyProgramUpdatableFieldsEquals(LoyaltyProgram expected, LoyaltyProgram actual) {
        assertThat(expected)
            .as("Verify LoyaltyProgram relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getPointsPerDollar()).as("check pointsPerDollar").isEqualTo(actual.getPointsPerDollar()))
            .satisfies(e -> assertThat(e.getRewardThreshold()).as("check rewardThreshold").isEqualTo(actual.getRewardThreshold()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyProgramUpdatableRelationshipsEquals(LoyaltyProgram expected, LoyaltyProgram actual) {}
}

package com.travel.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TestimonialAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestimonialAllPropertiesEquals(Testimonial expected, Testimonial actual) {
        assertTestimonialAutoGeneratedPropertiesEquals(expected, actual);
        assertTestimonialAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestimonialAllUpdatablePropertiesEquals(Testimonial expected, Testimonial actual) {
        assertTestimonialUpdatableFieldsEquals(expected, actual);
        assertTestimonialUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestimonialAutoGeneratedPropertiesEquals(Testimonial expected, Testimonial actual) {
        assertThat(expected)
            .as("Verify Testimonial auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestimonialUpdatableFieldsEquals(Testimonial expected, Testimonial actual) {
        assertThat(expected)
            .as("Verify Testimonial relevant properties")
            .satisfies(e -> assertThat(e.getAuthorName()).as("check authorName").isEqualTo(actual.getAuthorName()))
            .satisfies(e -> assertThat(e.getContent()).as("check content").isEqualTo(actual.getContent()))
            .satisfies(e -> assertThat(e.getRating()).as("check rating").isEqualTo(actual.getRating()))
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestimonialUpdatableRelationshipsEquals(Testimonial expected, Testimonial actual) {}
}

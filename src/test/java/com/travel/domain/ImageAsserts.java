package com.travel.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ImageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageAllPropertiesEquals(Image expected, Image actual) {
        assertImageAutoGeneratedPropertiesEquals(expected, actual);
        assertImageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageAllUpdatablePropertiesEquals(Image expected, Image actual) {
        assertImageUpdatableFieldsEquals(expected, actual);
        assertImageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageAutoGeneratedPropertiesEquals(Image expected, Image actual) {
        assertThat(expected)
            .as("Verify Image auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageUpdatableFieldsEquals(Image expected, Image actual) {
        assertThat(expected)
            .as("Verify Image relevant properties")
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageUpdatableRelationshipsEquals(Image expected, Image actual) {
        assertThat(expected)
            .as("Verify Image relationships")
            .satisfies(e -> assertThat(e.getRoom()).as("check room").isEqualTo(actual.getRoom()));
    }
}
